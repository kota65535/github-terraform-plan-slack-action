name: Test

on:
  pull_request:


jobs:
  show-context:
    runs-on: ubuntu-latest
    steps:
      - name: Show github context object
        run: echo $JSON
        env:
          JSON: ${{ toJSON(github) }}
  
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./.github/workflows
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run test
        run: |
          npm install
          npm run test
  
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./.github/workflows
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run terraform init
        run: terraform init
      - name: Select dev workspace
        run: terraform workspace select dev
      - name: Run terraform plan for dev
        run: terraform plan
      - name: Select prod workspace
        run: terraform workspace select prod
      - name: Run terraform plan for prod
        run: |
          terraform taint aws_dynamodb_table.test
          terraform plan

  after-plan:
    runs-on: ubuntu-latest
    needs:
      - plan
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Notify terraform plan result as PR comment for dev
        uses: ./
        id: plan-dev
        with:
          plan-job: plan
          plan-step: Run terraform plan for dev
          workspace: dev
      - name: Assertion
        run: |
          set -x +e
          RET=0
          diff <(jq --sort-keys . .github/workflows/dev/outside.json) <(jq --sort-keys . <<< '${{ steps.plan-dev.outputs.outside }}')
          RET=$((RET+$?))
          diff <(jq --sort-keys . .github/workflows/dev/action.json)  <(jq --sort-keys . <<< '${{ steps.plan-dev.outputs.action }}')
          RET=$((RET+$?))
          diff <(jq --sort-keys . .github/workflows/dev/output.json)  <(jq --sort-keys . <<< '${{ steps.plan-dev.outputs.output }}')
          RET=$((RET+$?))
          diff <(jq --sort-keys . .github/workflows/dev/warning.json) <(jq --sort-keys . <<< '${{ steps.plan-dev.outputs.warning }}')
          RET=$((RET+$?))
          diff <(jq --sort-keys . .github/workflows/dev/summary.json) <(jq --sort-keys . <<< '${{ steps.plan-dev.outputs.summary }}')
          RET=$((RET+$?))
          [ '${{ steps.plan-dev.outputs.should-apply }}' = 'false' ]
          RET=$((RET+$?))
          
          [[ $RET -eq 0 ]]
          
      - name: Notify terraform plan result as PR comment for prod
        uses: ./
        id: plan-prod
        with:
          plan-job: plan
          plan-step: Run terraform plan for prod
          workspace: prod
      - name: Assertion
        run: |
          set -x +e
          RET=0
          diff <(jq --sort-keys . .github/workflows/prod/outside.json) <(jq --sort-keys . <<< '${{ steps.plan-prod.outputs.outside }}')
          RET=$((RET+$?))
          diff <(jq --sort-keys . .github/workflows/prod/action.json)  <(jq --sort-keys . <<< '${{ steps.plan-prod.outputs.action }}')
          RET=$((RET+$?))
          diff <(jq --sort-keys . .github/workflows/prod/output.json)  <(jq --sort-keys . <<< '${{ steps.plan-prod.outputs.output }}')
          RET=$((RET+$?))
          diff <(jq --sort-keys . .github/workflows/prod/warning.json) <(jq --sort-keys . <<< '${{ steps.plan-prod.outputs.warning }}')
          RET=$((RET+$?))
          diff <(jq --sort-keys . .github/workflows/prod/summary.json) <(jq --sort-keys . <<< '${{ steps.plan-prod.outputs.summary }}')
          RET=$((RET+$?))
          [ '${{ steps.plan-prod.outputs.should-apply }}' = 'true' ]
          RET=$((RET+$?))
          
          [[ $RET -eq 0 ]]
