name: Test

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
  pull_request:


jobs:
  show-context:
    runs-on: ubuntu-latest
    steps:
      - name: Show github context object
        run: echo $JSON
        env:
          JSON: ${{ toJSON(github) }}
  
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./.github/workflows
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup tools
        uses: ./.github/actions/setup-tools
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Run terraform init
        run: terraform init
      - name: Select dev workspace
        run: terraform workspace select dev
      - name: Run terraform plan for dev
        run: terraform plan
      - name: Select prod workspace
        run: terraform workspace select prod
      - name: Run terraform plan for prod
        run: |
          terraform taint aws_dynamodb_table.test
          terraform plan
  
  after-plan:
    runs-on: ubuntu-latest
    needs:
      - plan
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Notify terraform plan result to slack for dev
        uses: kota65535/github-terraform-plan-slack-action@v1
        id: plan-dev
        with:
          plan-job: plan
          plan-step: Run terraform plan for dev
          workspace: dev
          channel: github
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: Assertion
        run: |
          set -x
          [ '${{ steps.plan-dev.outputs.outside }}' = '{"offset":-1,"sections":[]}' ]
          [ '${{ steps.plan-dev.outputs.action }}' = '{"offset":-1,"sections":{"create":[],"update":[],"replace":[],"destroy":[]}}' ]
          [ '${{ steps.plan-dev.outputs.output }}' = '{"offset":-1,"sections":[]}' ]
          [ '${{ steps.plan-dev.outputs.warning }}' = '{"offset":19,"sections":[{"str":"│ Warning: Argument is deprecated\n│ \n│   with aws_s3_bucket.test,\n│   on main.tf line 31, in resource \"aws_s3_bucket\" \"test\":\n│   31: resource \"aws_s3_bucket\" \"test\" {\n│ \n│ Use the aws_s3_bucket_versioning resource instead\n│ \n│ (and 3 more similar warnings elsewhere)\n"}]}' ]
          [ '${{ steps.plan-dev.outputs.summary }}' = '{"offset":15,"add":0,"change":0,"destroy":0,"str":"No changes. Your infrastructure matches the configuration."}' ]
          [ '${{ steps.plan-dev.outputs.should-apply }}' = 'false' ]
      - name: Notify terraform plan result to slack for prod
        uses: kota65535/github-terraform-plan-slack-action@v1
        id: plan-prod
        with:
          plan-job: plan
          plan-step: Run terraform plan for prod
          workspace: prod
          slack-webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Assertion
        run: |
          set -x
          [ '${{ steps.plan-prod.outputs.outside }}' = '{"offset":-1,"sections":[]}' ]
          [ '${{ steps.plan-prod.outputs.action }}' = '{"offset":18,"sections":{"create":[],"update":[],"replace":[{"name":"aws_dynamodb_table.test","str":"  # aws_dynamodb_table.test is tainted, so must be replaced\n-/+ resource \"aws_dynamodb_table\" \"test\" {\n      ~ arn              = \"arn:aws:dynamodb:ap-northeast-1:***:table/github-action-test-prod\" -> (known after apply)\n      ~ id               = \"github-action-test-prod\" -> (known after apply)\n        name             = \"github-action-test-prod\"\n      ~ read_capacity    = 0 -> (known after apply)\n      + stream_arn       = (known after apply)\n      - stream_enabled   = false -> null\n      + stream_label     = (known after apply)\n      + stream_view_type = (known after apply)\n      - tags             = {} -> null\n      ~ tags_all         = {} -> (known after apply)\n      ~ write_capacity   = 0 -> (known after apply)\n        # (2 unchanged attributes hidden)\n\n      ~ point_in_time_recovery {\n          ~ enabled = false -> (known after apply)\n        }\n\n      + server_side_encryption {\n          + enabled     = (known after apply)\n          + kms_key_arn = (known after apply)\n        }\n\n      ~ ttl {\n          + attribute_name = (known after apply)\n          ~ enabled        = false -> (known after apply)\n        }\n\n        # (1 unchanged block hidden)\n    }\n\n"}],"destroy":[]}}'  ]
          [ '${{ steps.plan-prod.outputs.output }}' = '{"offset":58,"sections":[{"name":"timestamp","str":"  ~ timestamp = \"2023-02-24T17:35:29Z\" -> (known after apply)\n"}]}' ]
          [ '${{ steps.plan-prod.outputs.warning }}' = '{"offset":60,"sections":[{"str":"│ Warning: Argument is deprecated\n│ \n│   with aws_s3_bucket.test,\n│   on main.tf line 31, in resource \"aws_s3_bucket\" \"test\":\n│   31: resource \"aws_s3_bucket\" \"test\" {\n│ \n│ Use the aws_s3_bucket_versioning resource instead\n│ \n│ (and 3 more similar warnings elsewhere)\n"}]}' ]
          [ '${{ steps.plan-prod.outputs.summary }}' = '{"offset":56,"add":1,"change":0,"destroy":1,"str":"Plan: 1 to add, 0 to change, 1 to destroy."}' ]
          [ '${{ steps.plan-prod.outputs.should-apply }}' = 'true' ]
